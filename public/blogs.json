{"status":"ok","feed":{"url":"https://medium.com/feed/@ishaan.gupta0401","title":"Stories by Ishaan Gupta on Medium","link":"https://medium.com/@ishaan.gupta0401?source=rss-7e13715733dd------2","author":"","description":"Stories by Ishaan Gupta on Medium","image":"https://cdn-images-1.medium.com/fit/c/150/150/0*BjiZRoXXzS6YC48m.jpg"},"items":[{"title":"Volvo Eicher Commercial Vehicles Uptime Center","pubDate":"2021-11-27 08:56:09","link":"https://medium.com/@ishaan.gupta0401/volvo-eicher-commercial-vehicles-uptime-center-e16a5214efef?source=rss-7e13715733dd------2","guid":"https://medium.com/p/e16a5214efef","author":"Ishaan Gupta","thumbnail":"https://cdn-images-1.medium.com/max/1024/1*uiBRUzK09GT9_XPwhF34sg.jpeg","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*uiBRUzK09GT9_XPwhF34sg.jpeg\"></figure><h3>ABOUT VOLVO EICHER JOINT\u00a0VENTURE</h3>\n<p>VE Commercial Vehicles Limited (VECV) is a joint endeavor between the Volvo Group and Eicher Motors Limited. In operation since July 2008, VECV is a multi-brand, multi-division organization including a total scope of Eicher Trucks and Buses, Volvo Buses, elite dispersion of Volvo Trucks in India, motor assembling and product center point for Volvo Group, non-car motors, and Eicher part business. VECV is likewise continually presenting creative advances and administrations, through 9 assembling offices spread across India, upheld by a solid showroom organization of north of 500 outlets. The organization is trading to the north of 34 nations and is being perceived as an industry chief in driving modernization in business transportation in India and the creating\u00a0scene.</p>\n<h3><strong>ABOUT UPTIME DEPARTMENT</strong></h3>\n<p>Uptime Business Analytics department was formed in 2019. The main objective of the uptime business analytics team is to maximize the running time of vehicles. We develop different use cases which help us to either remove the obstacle consumers are facing or to improve their experience. Each use case is dealt with best of our abilities to ensure maximum productivity.</p>\n<h3>REQUIREMENTS</h3>\n<ol><li>OS\u200a\u2014\u200aWindows 10+ and\u00a0Linux</li></ol>\n<p>2. Networking\u200a\u2014\u200aWinSCP and\u00a0Putty</p>\n<p>3. Programming\u200a\u2014\u200aPython 3.8+ and Jupyter\u00a0Notebook</p>\n<p>4. Analysis Tools\u200a\u2014\u200aExcel, Tableau, and\u00a0MySQL</p>\n<h3>GENERAL WORKFLOW</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1003/1*J0wO4BQ8qDHclJHtcHG09g.jpeg\"><figcaption>WORKFLOW IN\u00a0UPTIME</figcaption></figure><ol>\n<li>Data is monitored in real time using Engine Management System\u00a0(EMS).</li>\n<li>Gather data using IBM cloud services and store the data in mySQL database.</li>\n<li>Transmit the data into predefined models and get the verdict of the data provided to the\u00a0model.</li>\n<li>There are three types of forecasts\u200a\u2014\u200aStop Now (High Priority), Visit Soon (Medium Priority) and Do it yourself (Low Priority).</li>\n<li>These forecast information is provided to the driver and necessary actions are expected from the driver\u2019s\u00a0end.</li>\n</ol>\n<h3><strong>PART CONSUMPTION USE\u00a0CASE</strong></h3>\n<p>Each vehicle has a unique chassis number. A Chassis number looks something like this\u200a\u2014\u200a\u2018MC2BCNRC0MC070071\u2019. In this use case, we primarily work on HD as well as LMD vehicles. From time to time each logistic vehicles face failure in the components that are essential for vehicle to function smoothly.</p>\n<h4>STRATEGY</h4>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*vT6LyfAD1Pz7NvEMbn-rww.png\"><figcaption>Data analytics team</figcaption></figure><p>Before working on any use case, we first look at the data that will be used for our analysis. The first step is to clean the data and fetch relevant fields to perform required analytics. In this particular use case, we fetch <strong>CAN_BS6</strong>, <strong>Customer Voice</strong> and <strong>Part Consumption</strong> data.</p>\n<p>After we fetched the data, we will determine the Part Consumption for each vehicle. By this method, we will get the idea of which part has more demand. This will help us to get a fair amount of idea on how much manufacturing and stocking must be done for smooth functioning of the plant or service\u00a0center.</p>\n<p>We now need to associate the vehicle with its preferred dealership. By doing this, we can let dealer know how much demand to expect in future. This will help dealership to prepare accordingly. It is very important from sales perspective as well after sales services.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*LmAW7TXFkOO4UEdw84IJQA.png\"><figcaption>Part Consumption Design</figcaption></figure><h3>CONCLUSION</h3>\n<p>I would now like to conclude my blog with a healthy final note. In conclusion, I would like to say the uptime department is highly innovative and motivated to bring change in the world of logistics. This project is very important from business perspective of Volvo Eicher Venture. Data Engineering is very important for us, as discussed in use case above. Out models can only be as good as our data and the engineers analyzing that data. I am sure in coming years we will solve very important use cases that our consumers face\u00a0today.</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=e16a5214efef\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*uiBRUzK09GT9_XPwhF34sg.jpeg\"></figure><h3>ABOUT VOLVO EICHER JOINT\u00a0VENTURE</h3>\n<p>VE Commercial Vehicles Limited (VECV) is a joint endeavor between the Volvo Group and Eicher Motors Limited. In operation since July 2008, VECV is a multi-brand, multi-division organization including a total scope of Eicher Trucks and Buses, Volvo Buses, elite dispersion of Volvo Trucks in India, motor assembling and product center point for Volvo Group, non-car motors, and Eicher part business. VECV is likewise continually presenting creative advances and administrations, through 9 assembling offices spread across India, upheld by a solid showroom organization of north of 500 outlets. The organization is trading to the north of 34 nations and is being perceived as an industry chief in driving modernization in business transportation in India and the creating\u00a0scene.</p>\n<h3><strong>ABOUT UPTIME DEPARTMENT</strong></h3>\n<p>Uptime Business Analytics department was formed in 2019. The main objective of the uptime business analytics team is to maximize the running time of vehicles. We develop different use cases which help us to either remove the obstacle consumers are facing or to improve their experience. Each use case is dealt with best of our abilities to ensure maximum productivity.</p>\n<h3>REQUIREMENTS</h3>\n<ol><li>OS\u200a\u2014\u200aWindows 10+ and\u00a0Linux</li></ol>\n<p>2. Networking\u200a\u2014\u200aWinSCP and\u00a0Putty</p>\n<p>3. Programming\u200a\u2014\u200aPython 3.8+ and Jupyter\u00a0Notebook</p>\n<p>4. Analysis Tools\u200a\u2014\u200aExcel, Tableau, and\u00a0MySQL</p>\n<h3>GENERAL WORKFLOW</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1003/1*J0wO4BQ8qDHclJHtcHG09g.jpeg\"><figcaption>WORKFLOW IN\u00a0UPTIME</figcaption></figure><ol>\n<li>Data is monitored in real time using Engine Management System\u00a0(EMS).</li>\n<li>Gather data using IBM cloud services and store the data in mySQL database.</li>\n<li>Transmit the data into predefined models and get the verdict of the data provided to the\u00a0model.</li>\n<li>There are three types of forecasts\u200a\u2014\u200aStop Now (High Priority), Visit Soon (Medium Priority) and Do it yourself (Low Priority).</li>\n<li>These forecast information is provided to the driver and necessary actions are expected from the driver\u2019s\u00a0end.</li>\n</ol>\n<h3><strong>PART CONSUMPTION USE\u00a0CASE</strong></h3>\n<p>Each vehicle has a unique chassis number. A Chassis number looks something like this\u200a\u2014\u200a\u2018MC2BCNRC0MC070071\u2019. In this use case, we primarily work on HD as well as LMD vehicles. From time to time each logistic vehicles face failure in the components that are essential for vehicle to function smoothly.</p>\n<h4>STRATEGY</h4>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*vT6LyfAD1Pz7NvEMbn-rww.png\"><figcaption>Data analytics team</figcaption></figure><p>Before working on any use case, we first look at the data that will be used for our analysis. The first step is to clean the data and fetch relevant fields to perform required analytics. In this particular use case, we fetch <strong>CAN_BS6</strong>, <strong>Customer Voice</strong> and <strong>Part Consumption</strong> data.</p>\n<p>After we fetched the data, we will determine the Part Consumption for each vehicle. By this method, we will get the idea of which part has more demand. This will help us to get a fair amount of idea on how much manufacturing and stocking must be done for smooth functioning of the plant or service\u00a0center.</p>\n<p>We now need to associate the vehicle with its preferred dealership. By doing this, we can let dealer know how much demand to expect in future. This will help dealership to prepare accordingly. It is very important from sales perspective as well after sales services.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*LmAW7TXFkOO4UEdw84IJQA.png\"><figcaption>Part Consumption Design</figcaption></figure><h3>CONCLUSION</h3>\n<p>I would now like to conclude my blog with a healthy final note. In conclusion, I would like to say the uptime department is highly innovative and motivated to bring change in the world of logistics. This project is very important from business perspective of Volvo Eicher Venture. Data Engineering is very important for us, as discussed in use case above. Out models can only be as good as our data and the engineers analyzing that data. I am sure in coming years we will solve very important use cases that our consumers face\u00a0today.</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=e16a5214efef\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["data-science","automobile"]},{"title":"Summer Internship at 3-D paradise","pubDate":"2021-09-27 18:05:12","link":"https://medium.com/@ishaan.gupta0401/summer-internship-at-3-d-paradise-8179d58c0e8c?source=rss-7e13715733dd------2","guid":"https://medium.com/p/8179d58c0e8c","author":"Ishaan Gupta","thumbnail":"https://cdn-images-1.medium.com/max/225/1*fF_qZqRiryZ-HEX1OBtg7w.jpeg","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/225/1*fF_qZqRiryZ-HEX1OBtg7w.jpeg\"></figure><h3><strong>About 3-D\u00a0paradise</strong></h3>\n<p>Settled in Delhi, 3D Paradise is a group of a profoundly enthusiastic and committed group of inventive architects, imaginative fashioners, and arrangement suppliers. They confidently validate any theoretical idea by making quality 3D Printers for business and non-business purposes. They seek to help their customers to collaborate with their plan in a cutting-edge design, utilizing best-in-class innovation and astute technocrats ready. They have a definitive vision is to make 3D Printing innovation more open and significant to the assorted class of clients that 3D Paradise takes into account. They are focused on being India\u2019s innovator in 3D printing research. Ensuring clients the most dependable and cost-productive machines accessible on the lookout, while joining the most recent innovation. They seek 100 percent consumer loyalty, from machines themselves to the innovation, the supplemental materials, and the client\u00a0support.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/270/1*xVA12EDQzJ90Z8VoVwqT8Q.jpeg\"><figcaption>Ether 3-D\u00a0printer</figcaption></figure><h3><strong>Work Culture</strong></h3>\n<p>It was a very interesting experience. Since this is a 3-D printing company, it mostly has electronics and mechanical engineers, it was great to be a part of a small web developers team. My mentor was an extremely humble individual. He always helped and motivated me to fix bugs, solve problems in an efficient way, taught me the basics of PostgreSQL, etc. The working hours were very flexible. There wasn\u2019t any hard and fast rule of sitting on a desk for 8 hours, as long as you get stuff done. I was very good at my job due to healthy support from the company superiors.</p>\n<h3><strong>Internship Project</strong></h3>\n<p>My internship project was to improvise and maintain the Django website of 3-D paradise. It was a very interesting project to work on. The best thing was there was only one web development team who managed the website. Even though I was an intern, I had a major responsibility to ensure the smooth functioning of the website. Website is the first impression the potential client has upon the company and its quality. We had to ensure that the client is super engaged with the content and the application is\u00a0robust.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*mgxugJ9TKGq4bmSJAsdJdA.jpeg\"><figcaption>Website snapshot\u200a\u2014\u200a<a href=\"https://paradise-3d.com/ether\">https://paradise-3d.com/</a></figcaption></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/602/1*teC0suuI9xP3E_t3evRdoA.jpeg\"><figcaption>Frontend-Backend interaction flowchart</figcaption></figure><h3><strong>Final Thoughts</strong></h3>\n<p>I would like to take a moment and appreciate all my friends, family, and teachers who supported and guided me. This was a wonderful learning experience, not only did it help me to learn technical things but it has also helped me to explore my interests. Thank you for reading my\u00a0article!</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=8179d58c0e8c\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/225/1*fF_qZqRiryZ-HEX1OBtg7w.jpeg\"></figure><h3><strong>About 3-D\u00a0paradise</strong></h3>\n<p>Settled in Delhi, 3D Paradise is a group of a profoundly enthusiastic and committed group of inventive architects, imaginative fashioners, and arrangement suppliers. They confidently validate any theoretical idea by making quality 3D Printers for business and non-business purposes. They seek to help their customers to collaborate with their plan in a cutting-edge design, utilizing best-in-class innovation and astute technocrats ready. They have a definitive vision is to make 3D Printing innovation more open and significant to the assorted class of clients that 3D Paradise takes into account. They are focused on being India\u2019s innovator in 3D printing research. Ensuring clients the most dependable and cost-productive machines accessible on the lookout, while joining the most recent innovation. They seek 100 percent consumer loyalty, from machines themselves to the innovation, the supplemental materials, and the client\u00a0support.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/270/1*xVA12EDQzJ90Z8VoVwqT8Q.jpeg\"><figcaption>Ether 3-D\u00a0printer</figcaption></figure><h3><strong>Work Culture</strong></h3>\n<p>It was a very interesting experience. Since this is a 3-D printing company, it mostly has electronics and mechanical engineers, it was great to be a part of a small web developers team. My mentor was an extremely humble individual. He always helped and motivated me to fix bugs, solve problems in an efficient way, taught me the basics of PostgreSQL, etc. The working hours were very flexible. There wasn\u2019t any hard and fast rule of sitting on a desk for 8 hours, as long as you get stuff done. I was very good at my job due to healthy support from the company superiors.</p>\n<h3><strong>Internship Project</strong></h3>\n<p>My internship project was to improvise and maintain the Django website of 3-D paradise. It was a very interesting project to work on. The best thing was there was only one web development team who managed the website. Even though I was an intern, I had a major responsibility to ensure the smooth functioning of the website. Website is the first impression the potential client has upon the company and its quality. We had to ensure that the client is super engaged with the content and the application is\u00a0robust.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*mgxugJ9TKGq4bmSJAsdJdA.jpeg\"><figcaption>Website snapshot\u200a\u2014\u200a<a href=\"https://paradise-3d.com/ether\">https://paradise-3d.com/</a></figcaption></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/602/1*teC0suuI9xP3E_t3evRdoA.jpeg\"><figcaption>Frontend-Backend interaction flowchart</figcaption></figure><h3><strong>Final Thoughts</strong></h3>\n<p>I would like to take a moment and appreciate all my friends, family, and teachers who supported and guided me. This was a wonderful learning experience, not only did it help me to learn technical things but it has also helped me to explore my interests. Thank you for reading my\u00a0article!</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=8179d58c0e8c\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":[]},{"title":"Monte Carlo Tree Search Application on Chess","pubDate":"2020-11-13 16:13:39","link":"https://medium.com/@ishaan.gupta0401/monte-carlo-tree-search-application-on-chess-5573fc0efb75?source=rss-7e13715733dd------2","guid":"https://medium.com/p/5573fc0efb75","author":"Ishaan Gupta","thumbnail":"https://cdn-images-1.medium.com/max/1024/0*Y7aN7njxxaJbBsKO","description":"\n<p>In this article, I will explain how I implemented Monte Carlo Tree Search (MCTS) on the game of chess with code in\u00a0Python.</p>\n<p><strong>Contents of this Article</strong>\u00a0:</p>\n<p><em>Introduction</em></p>\n<p><em>What is\u00a0MCTS</em></p>\n<p>Upper Confidence Bound</p>\n<p><em>Algorithm of\u00a0MCTS</em></p>\n<p><em>Implementation on the Game of\u00a0Chess</em></p>\n<p><em>Improvement made by AlphaZero</em></p>\n<p><em>Result of MCTS in AlphaZero Chess</em></p>\n<p><em>Conclusion</em></p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*Y7aN7njxxaJbBsKO\"><figcaption>Photo by <a href=\"https://unsplash.com/@hpzworkz?utm_source=medium&amp;utm_medium=referral\">Hassan Pasha</a> on\u00a0<a href=\"https://unsplash.com/?utm_source=medium&amp;utm_medium=referral\">Unsplash</a></figcaption></figure><h3><strong>Introduction</strong></h3>\n<p>I have made chess bot for my college semester\u2019s project using minimax algorithm and MCTS. In this article I will walk you through how I was able to implement MCTS in\u00a0chess.</p>\n<p>The Games like Tic-Tac-Toe, Rubik\u2019s Cube, Sudoku, Chess, Go and many others have common property that lead to exponential increase in the number of possible actions that can be played. These possible steps increase exponentially as the game goes forward. Ideally if you can predict every possible move and its result that may occur in the future. You can increase your chance of\u00a0winning.</p>\n<p>But since the moves increase exponentially\u200a\u2014\u200athe computation power that is required to calculate the moves also goes through the\u00a0roof.</p>\n<p>As of now, strongest computer in the world can do 200,000 trillion <strong>calculations per\u00a0second.</strong></p>\n<p>But sadly, that is not enough if we need to predict best move of given state of the game. Chess alone has 10\u00b9\u00b2\u2070 states which is more than number of atoms in the\u00a0world!</p>\n<p>The solution to this problem is to get closer to the best move of the given state by using statistics. If say we have played a move that has led to victory 99 out of 100 random games\u00a0, it is very likely that it is good move and there are very less chances that it will lead to defeat. This is the idea of MCTS in\u00a0general.</p>\n<h3><strong><em>What is\u00a0MCTS?</em></strong></h3>\n<p><em>Monte Carlo Tree Search</em> is a widely used algorithm in game theory which makes decision based on updated policy devised by the tree with each iteration.</p>\n<p>The main advantage of MCTS is that it can operate effectively without any knowledge in the particular domain, apart from the rules and end conditions, and can find its own moves and learn from them by playing random playouts.</p>\n<p>It consists of four stages <em>Selecting \u2192 Expanding \u2192 Rollout \u2192 Backpropagating </em>in each iteration.</p>\n<p>It is better than traditional <em>tree search algorithm</em> as it does not explore every possible state to make decision as while it is feasible to store all possible states of games like tic-tac-toe, it fails when we want to predict moves of games like chess and go as it has millions of trillions possible states which is impossible to store and\u00a0process.</p>\n<p>In that case, MCTS provides us with best probabilistic move given the current state of the\u00a0game.</p>\n<h3><strong>Upper Confidence Bound</strong></h3>\n<p>Before jumping to the Algorithm, I decided to take time and explain what is Upper Confidence Bound(UCB) so that understanding of algorithm becomes more intuitive.</p>\n<p>UCB is the factor that decides which node evaluate next in order to maximize probability of victory from the given state. It generally consists of two factors, Exploitation and Exploration. It can be written\u00a0as-</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/682/1*wDPvrLmDEcmv2mZAtD2yqg.png\"><figcaption>source = <a href=\"https://www.geeksforgeeks.org/upper-confidence-bound-algorithm-in-reinforcement-learning/\">https://www.geeksforgeeks.org/upper-confidence-bound-algorithm-in-reinforcement-learning/</a></figcaption></figure><p>Qt(a)- This symbol basically means how successful action \u2018a\u2019 has been whenever it got selected, higher the success rate, higher will be it\u2019s ucb value. This is known as exploitation.</p>\n<p>Nt(a)- This is number of times action \u2018a\u2019 has been taken, if this is low, the ucb value will the high and algorithm will want to give action \u2018a\u2019 chance to explore it\u2019s possibilities.</p>\n<p>We can tweak with \u2018c\u2019 as it is a exploration constant which basically how we often do we want our algorithm to explore new possibilities. If there are many states then it is advisable to keep \u2018c\u2019 low to reduce computational power. We can hit and try the value of \u2018c\u2019 to check which value works for\u00a0us.</p>\n<p>I will be using UCB formula\u00a0as-</p>\n<p>UCB = V + 2*sqrt(ln N/ni)</p>\n<p>V = winning score of current\u00a0node</p>\n<p>N = Number of times parent node has been\u00a0visited</p>\n<p>ni = number of times child node has been\u00a0visited.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/684/1*TH3J5iFZy2dBZ6dlxqcACA.png\"></figure><p>Here 1/10\u2076 and 1/10\u00b9\u2070 are added to avoid 0 division exception.</p>\n<h3><strong>Algorithm of\u00a0MCTS</strong></h3>\n<p>In this section I will be explaining how MCTS gives \u201c<em>best probabilistic move given the current state of the\u00a0game\u201d.</em></p>\n<ol><li>\n<strong>Selection</strong>: In this function, we simply iterate through all the child of the given state and select the one with highest UCB\u00a0value.</li></ol>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/269/1*SVQLD3BKmvBJQ9kj2gUdAw.png\"></figure><p>2. <strong>Expansion</strong>: In this function, we will keep on calling the child with maximum priority till we reach the current leaf\u00a0node.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/357/1*G1mV8YrMROoiTKhhfsjDSA.png\"></figure><p>3. <strong>Rollout</strong>: When we get the leaf node from the expansion(), we will call rollout() function, which will make random moves from the node received from expansion() till we reach end of the game and will return leaf node. Note\u200a\u2014\u200aFrom this state no new states are possible as game has been ended. We will return this node with a reward(+1) if we won at the end or punishment(-1) if we lose or (+0.5) if we\u00a0draw.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/445/1*ZZ5ZpOxs3TC68kZjFONVLQ.png\"></figure><p>4. <strong>Backpropagation</strong>: When we receive the final node and reward from rollout(), we will traverse that reward till the root of the tree which will in turn update our UCB value of each node in the\u00a0path.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/318/1*Oas_VzVGJAaqLLygS0fJww.png\"></figure><h3><strong><em>Implementation on the Game of\u00a0Chess</em></strong></h3>\n<p>I have majorly used <em>pychess</em> library which has very helpful in-built functions like <em>chess.Board(), chess.Board().legal_moves()</em> etc.</p>\n<p>Refer\u200a<em>\u2014</em><strong><em>\u200a</em></strong><a href=\"https://pypi.org/project/chess/\"><strong><em>pychess</em></strong></a> documentation</p>\n<p>This is how my <em>node</em> looks\u00a0like-</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/316/1*wj8v5hrd4bBwtGyiJ51Eow.png\"></figure><p><em>State</em>- Current Position of\u00a0board</p>\n<p><em>Children</em>- Set of all possible states from legal action from current\u00a0node.</p>\n<p><em>Parent</em>- Parent node of current\u00a0node</p>\n<p><em>N</em>- Number of times parent node has been visited(used in\u00a0UCB)</p>\n<p><em>n</em>-Number of times current node has been visited(used in\u00a0UCB)</p>\n<p><em>v</em>-Exploitation factor of current node(used in\u00a0UCB)</p>\n<p>Here is the main function-</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/559/1*N_oFXSp6DSLnUzpGRdJa7Q.png\"></figure><p>Here chess.Board() gives the starting position of the\u00a0board:</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/397/1*N-vPufa72WpwbLr6nNxnlg.png\"></figure><p>Other functionalities are provided in the algorithm itself. It is pretty simple to compare the code given below to the algorithm provided\u00a0above.</p>\n<p>Github code link- <a href=\"https://github.com/Ish2K/Chess-Bot-AI-Algorithms/blob/main/Git_chess/monte_carlo_implementation.py\">https://github.com/Ish2K/Chess-Bot-AI-Algorithms/blob/main/Git_chess/monte_carlo_implementation.py</a></p>\n<h3><strong>Improvement made by AlphaZero</strong></h3>\n<p>After implementing MCTS, creators of Alphazero removed rollout() functionality altogether and replaced it with Current Neural Networks. This means instead of randomly picking out moves from leaf node, they actually used probability distribution of each child node to select the best\u00a0node.</p>\n<p>How did this\u00a0help?</p>\n<p>After each move, Monte Carlo tree was re-built and previous tree was thrown away. But with replacement of rollout function with Neural Network made decision process even better because this network is retained throughout the training process even if we don\u2019t have the previous\u00a0tree.</p>\n<h3>Result of MCTS in AlphaZero</h3>\n<blockquote>With the help of Deep Neural networks, Google was able to build chess engine AlphaZero which was able to beat <a href=\"https://stockfishchess.org/\">Stockfish</a> which was developed for over a decade by chess grandmaster\u2019s help and book knowledge.</blockquote>\n<p>The engine was trained for only 4 hours of self-play with just the rules of the game and nothing else. Here is the graph that shows the growth of the\u00a0network.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/359/1*gxEwUSQD-y2SngFBbyWEFA.png\"><figcaption>source- <a href=\"https://www.biostat.wisc.edu/~craven/cs760/lectures/AlphaZero.pdf\">https://www.biostat.wisc.edu/~craven/cs760/lectures/AlphaZero.pdf</a></figcaption></figure><h3><strong>Conclusion</strong></h3>\n<p>As we can see how that this algorithm is very powerful, the only <strong>drawback</strong> of this algorithm is that <strong>memory requirement exceeds</strong> rapidly in just few iterations. MCTS can also be used in other games like- Poker,Go and\u00a0shogi.</p>\n<p>The best thing of MCTS is that it has an open mind when it predicts a move because it is not limited by moves suggested by experts or books written by legend players. Hence it is able to beat every player on the planet in games like chess and\u00a0go.</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=5573fc0efb75\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<p>In this article, I will explain how I implemented Monte Carlo Tree Search (MCTS) on the game of chess with code in\u00a0Python.</p>\n<p><strong>Contents of this Article</strong>\u00a0:</p>\n<p><em>Introduction</em></p>\n<p><em>What is\u00a0MCTS</em></p>\n<p>Upper Confidence Bound</p>\n<p><em>Algorithm of\u00a0MCTS</em></p>\n<p><em>Implementation on the Game of\u00a0Chess</em></p>\n<p><em>Improvement made by AlphaZero</em></p>\n<p><em>Result of MCTS in AlphaZero Chess</em></p>\n<p><em>Conclusion</em></p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*Y7aN7njxxaJbBsKO\"><figcaption>Photo by <a href=\"https://unsplash.com/@hpzworkz?utm_source=medium&amp;utm_medium=referral\">Hassan Pasha</a> on\u00a0<a href=\"https://unsplash.com/?utm_source=medium&amp;utm_medium=referral\">Unsplash</a></figcaption></figure><h3><strong>Introduction</strong></h3>\n<p>I have made chess bot for my college semester\u2019s project using minimax algorithm and MCTS. In this article I will walk you through how I was able to implement MCTS in\u00a0chess.</p>\n<p>The Games like Tic-Tac-Toe, Rubik\u2019s Cube, Sudoku, Chess, Go and many others have common property that lead to exponential increase in the number of possible actions that can be played. These possible steps increase exponentially as the game goes forward. Ideally if you can predict every possible move and its result that may occur in the future. You can increase your chance of\u00a0winning.</p>\n<p>But since the moves increase exponentially\u200a\u2014\u200athe computation power that is required to calculate the moves also goes through the\u00a0roof.</p>\n<p>As of now, strongest computer in the world can do 200,000 trillion <strong>calculations per\u00a0second.</strong></p>\n<p>But sadly, that is not enough if we need to predict best move of given state of the game. Chess alone has 10\u00b9\u00b2\u2070 states which is more than number of atoms in the\u00a0world!</p>\n<p>The solution to this problem is to get closer to the best move of the given state by using statistics. If say we have played a move that has led to victory 99 out of 100 random games\u00a0, it is very likely that it is good move and there are very less chances that it will lead to defeat. This is the idea of MCTS in\u00a0general.</p>\n<h3><strong><em>What is\u00a0MCTS?</em></strong></h3>\n<p><em>Monte Carlo Tree Search</em> is a widely used algorithm in game theory which makes decision based on updated policy devised by the tree with each iteration.</p>\n<p>The main advantage of MCTS is that it can operate effectively without any knowledge in the particular domain, apart from the rules and end conditions, and can find its own moves and learn from them by playing random playouts.</p>\n<p>It consists of four stages <em>Selecting \u2192 Expanding \u2192 Rollout \u2192 Backpropagating </em>in each iteration.</p>\n<p>It is better than traditional <em>tree search algorithm</em> as it does not explore every possible state to make decision as while it is feasible to store all possible states of games like tic-tac-toe, it fails when we want to predict moves of games like chess and go as it has millions of trillions possible states which is impossible to store and\u00a0process.</p>\n<p>In that case, MCTS provides us with best probabilistic move given the current state of the\u00a0game.</p>\n<h3><strong>Upper Confidence Bound</strong></h3>\n<p>Before jumping to the Algorithm, I decided to take time and explain what is Upper Confidence Bound(UCB) so that understanding of algorithm becomes more intuitive.</p>\n<p>UCB is the factor that decides which node evaluate next in order to maximize probability of victory from the given state. It generally consists of two factors, Exploitation and Exploration. It can be written\u00a0as-</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/682/1*wDPvrLmDEcmv2mZAtD2yqg.png\"><figcaption>source = <a href=\"https://www.geeksforgeeks.org/upper-confidence-bound-algorithm-in-reinforcement-learning/\">https://www.geeksforgeeks.org/upper-confidence-bound-algorithm-in-reinforcement-learning/</a></figcaption></figure><p>Qt(a)- This symbol basically means how successful action \u2018a\u2019 has been whenever it got selected, higher the success rate, higher will be it\u2019s ucb value. This is known as exploitation.</p>\n<p>Nt(a)- This is number of times action \u2018a\u2019 has been taken, if this is low, the ucb value will the high and algorithm will want to give action \u2018a\u2019 chance to explore it\u2019s possibilities.</p>\n<p>We can tweak with \u2018c\u2019 as it is a exploration constant which basically how we often do we want our algorithm to explore new possibilities. If there are many states then it is advisable to keep \u2018c\u2019 low to reduce computational power. We can hit and try the value of \u2018c\u2019 to check which value works for\u00a0us.</p>\n<p>I will be using UCB formula\u00a0as-</p>\n<p>UCB = V + 2*sqrt(ln N/ni)</p>\n<p>V = winning score of current\u00a0node</p>\n<p>N = Number of times parent node has been\u00a0visited</p>\n<p>ni = number of times child node has been\u00a0visited.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/684/1*TH3J5iFZy2dBZ6dlxqcACA.png\"></figure><p>Here 1/10\u2076 and 1/10\u00b9\u2070 are added to avoid 0 division exception.</p>\n<h3><strong>Algorithm of\u00a0MCTS</strong></h3>\n<p>In this section I will be explaining how MCTS gives \u201c<em>best probabilistic move given the current state of the\u00a0game\u201d.</em></p>\n<ol><li>\n<strong>Selection</strong>: In this function, we simply iterate through all the child of the given state and select the one with highest UCB\u00a0value.</li></ol>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/269/1*SVQLD3BKmvBJQ9kj2gUdAw.png\"></figure><p>2. <strong>Expansion</strong>: In this function, we will keep on calling the child with maximum priority till we reach the current leaf\u00a0node.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/357/1*G1mV8YrMROoiTKhhfsjDSA.png\"></figure><p>3. <strong>Rollout</strong>: When we get the leaf node from the expansion(), we will call rollout() function, which will make random moves from the node received from expansion() till we reach end of the game and will return leaf node. Note\u200a\u2014\u200aFrom this state no new states are possible as game has been ended. We will return this node with a reward(+1) if we won at the end or punishment(-1) if we lose or (+0.5) if we\u00a0draw.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/445/1*ZZ5ZpOxs3TC68kZjFONVLQ.png\"></figure><p>4. <strong>Backpropagation</strong>: When we receive the final node and reward from rollout(), we will traverse that reward till the root of the tree which will in turn update our UCB value of each node in the\u00a0path.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/318/1*Oas_VzVGJAaqLLygS0fJww.png\"></figure><h3><strong><em>Implementation on the Game of\u00a0Chess</em></strong></h3>\n<p>I have majorly used <em>pychess</em> library which has very helpful in-built functions like <em>chess.Board(), chess.Board().legal_moves()</em> etc.</p>\n<p>Refer\u200a<em>\u2014</em><strong><em>\u200a</em></strong><a href=\"https://pypi.org/project/chess/\"><strong><em>pychess</em></strong></a> documentation</p>\n<p>This is how my <em>node</em> looks\u00a0like-</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/316/1*wj8v5hrd4bBwtGyiJ51Eow.png\"></figure><p><em>State</em>- Current Position of\u00a0board</p>\n<p><em>Children</em>- Set of all possible states from legal action from current\u00a0node.</p>\n<p><em>Parent</em>- Parent node of current\u00a0node</p>\n<p><em>N</em>- Number of times parent node has been visited(used in\u00a0UCB)</p>\n<p><em>n</em>-Number of times current node has been visited(used in\u00a0UCB)</p>\n<p><em>v</em>-Exploitation factor of current node(used in\u00a0UCB)</p>\n<p>Here is the main function-</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/559/1*N_oFXSp6DSLnUzpGRdJa7Q.png\"></figure><p>Here chess.Board() gives the starting position of the\u00a0board:</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/397/1*N-vPufa72WpwbLr6nNxnlg.png\"></figure><p>Other functionalities are provided in the algorithm itself. It is pretty simple to compare the code given below to the algorithm provided\u00a0above.</p>\n<p>Github code link- <a href=\"https://github.com/Ish2K/Chess-Bot-AI-Algorithms/blob/main/Git_chess/monte_carlo_implementation.py\">https://github.com/Ish2K/Chess-Bot-AI-Algorithms/blob/main/Git_chess/monte_carlo_implementation.py</a></p>\n<h3><strong>Improvement made by AlphaZero</strong></h3>\n<p>After implementing MCTS, creators of Alphazero removed rollout() functionality altogether and replaced it with Current Neural Networks. This means instead of randomly picking out moves from leaf node, they actually used probability distribution of each child node to select the best\u00a0node.</p>\n<p>How did this\u00a0help?</p>\n<p>After each move, Monte Carlo tree was re-built and previous tree was thrown away. But with replacement of rollout function with Neural Network made decision process even better because this network is retained throughout the training process even if we don\u2019t have the previous\u00a0tree.</p>\n<h3>Result of MCTS in AlphaZero</h3>\n<blockquote>With the help of Deep Neural networks, Google was able to build chess engine AlphaZero which was able to beat <a href=\"https://stockfishchess.org/\">Stockfish</a> which was developed for over a decade by chess grandmaster\u2019s help and book knowledge.</blockquote>\n<p>The engine was trained for only 4 hours of self-play with just the rules of the game and nothing else. Here is the graph that shows the growth of the\u00a0network.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/359/1*gxEwUSQD-y2SngFBbyWEFA.png\"><figcaption>source- <a href=\"https://www.biostat.wisc.edu/~craven/cs760/lectures/AlphaZero.pdf\">https://www.biostat.wisc.edu/~craven/cs760/lectures/AlphaZero.pdf</a></figcaption></figure><h3><strong>Conclusion</strong></h3>\n<p>As we can see how that this algorithm is very powerful, the only <strong>drawback</strong> of this algorithm is that <strong>memory requirement exceeds</strong> rapidly in just few iterations. MCTS can also be used in other games like- Poker,Go and\u00a0shogi.</p>\n<p>The best thing of MCTS is that it has an open mind when it predicts a move because it is not limited by moves suggested by experts or books written by legend players. Hence it is able to beat every player on the planet in games like chess and\u00a0go.</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=5573fc0efb75\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["reinforcement-learning","chess","monte-carlo-tree-search","deep-learning","game-theory"]}]}